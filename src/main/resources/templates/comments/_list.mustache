<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}

                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}"
                        data-bs-nickname="{{nickname}}"
                > 수정 </button>

                <button type="button"
                        class="btn btn-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}"
                > 삭제 </button>

            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}


</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                <!-- Button trigger modal -->
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <!--댓글 수정 폼-->
                <form>
                    <!--닉네임 입력 -->
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input type="text" class="form-control" id="edit-comment-nickname">
                    </div>
                    <!-- 댓글 내용 입력 -->
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea class="form-control" type="text" rows="3" id="edit-comment-body"></textarea>
                    </div>
                    <!-- 히든 인풋 -->
                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">
                    <!-- 수정 완료 버튼 -->
                    <button type="button" id="comment-update-btn" class="btn btn-primary">수정 완료</button>
                </form>
            </div>

        </div>
    </div>
</div>

<!-- 모달 이벤트 처리 -->
<script>
    {
        // 모달 요소 선택
        const commentEditModal = document.querySelector("#comment-edit-modal");

        commentEditModal.addEventListener("show.bs.modal", function(event){

            //1. 트리거 버튼 선택
            const triggerBtn = event.relatedTarget;
            //2. 데이터 가져오기
            const id = triggerBtn.getAttribute("data-bs-id");
            const body = triggerBtn.getAttribute("data-bs-body");
            const articleId = triggerBtn.getAttribute("data-bs-article-id");
            const nickname = triggerBtn.getAttribute("data-bs-nickname");

            console.log(id, body, articleId, nickname);
            //3. 수정 폼에 데이터 반영
            document.querySelector("#edit-comment-id").value = id;
            document.querySelector("#edit-comment-body").value = body;
            document.querySelector("#edit-comment-article-id").value = articleId;
            document.querySelector("#edit-comment-nickname").value = nickname;

        });
    }

    {
        // 수정 완료 버튼 선택
        const commentUpdateBtn = document.querySelector("#comment-update-btn");

        // 클릭 이벤트 처리
        commentUpdateBtn.addEventListener("click", function (){

            // 수정 댓글 객체 생성
            const comment = {
                id : document.querySelector("#edit-comment-id").value,
                articleId : document.querySelector("#edit-comment-article-id").value,
                nickname : document.querySelector("#edit-comment-nickname").value,
                body : document.querySelector("#edit-comment-body").value
            }

            console.log(comment);

            // 수정 Rest Api 호출
            const url = "/api/comments/" + comment.id;
            fetch(url, {
                method : 'PATCH',
                headers : {
                    "Content-Type" : "application/json"
                },
                body : JSON.stringify(comment)
            }).then(response => {
                const msg = response.ok ? "댓글이 수정됐습니다" : "댓글 수정 실패..!";
                alert(msg);
                window.location.reload();
            });

        })

    }

</script>

<!-- 댓글 삭제 -->
<script>
    {

        // 삭제 버튼 선택
        const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");

        // 삭제 버튼 이벤트 처리
        // commentDeleteBtns.addEventListener("click", function(event){
        //     console.log("삭제 버튼이 클릭됐습니다.");
        // });

        commentDeleteBtns.forEach(btn => {
            btn.addEventListener("click", () => {
                // 삭제 댓글 id 가져오기
                const commentId = btn.getAttribute("data-comment-id");
                console.log(`삭제 버튼 클릭 : ${commentId}번 댓글`);

                const url = `/api/comments/${commentId}`;

                fetch(url, {
                    method : 'DELETE'
                }).then(response => {
                    const msg = response.ok ? "댓글이 삭제됐습니다" : "댓글 삭제 실패..!";
                    alert(msg);
                    window.location.reload();
                });

            });
        });

    }
</script>
